{# This is the paradigm template for Kildin Sámi.

 * Nouns: Display everything in the paradigm in a definition list
 * Verbs: Display a table with one column for present tense, and one for
   preterite tense; then display a separate definition list for
   nonfinite forms. For the negative verb and supinum negative verb, we
   also add a title on the table.

   - These are controlled by tagsets. Including more forms for verbs can
   	 be handled by adding more tags to the file `tagsets/sjd.tagset`

    There are rules giving лӣннче a special paradigm based on the preterite.

    There are rules for ordering the variants of abessive singular and place requested forms in parenthesis

 #}

{%- set first_l = lexicon_entry|xpath('lg/l')|first %}
{% set lemma = first_l|text %}
{% set pos = first_l|xpath('@pos')|first %}
{% set has_forms = paradigm and paradigm|length > 0 -%}
{% set paradigm_exists = paradigm|length > 0 %}

{%- if pos|upper == 'V' %}
{# As there are many variations and exceptions, especially for ordering the forms, we use a more manual 
   template for verbs than is common elsewhere #}
    {% set verbs = true %}

    {% set prs_sg1  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Sg1") %}

    {% set prs_sg2  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Sg2")
                                |without_tagset("negation") %}

    {% set prs_sg3  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Sg3") %}

    {% set prs_pl1  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Pl1") %}

    {% set prs_pl2  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Pl2")
                                |without_tagset("negation") %}

    {% set prs_pl3  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Pl3") %}

    {% set prs_sg4  =   paradigm|by_tagset_value("tense", "Prs")
                                |by_tagset_value("number", "Sg4")
                                |without_tagset("negation") %}

    {% set prt_sg1  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Sg1") %}

    {% set prt_sg2  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Sg2")
                                |without_tagset("negation") %}

    {% set prt_sg3  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Sg3") %}

    {% set prt_pl1  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Pl1") %}

    {% set prt_pl2  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Pl2")
                                |without_tagset("negation") %}

    {% set prt_pl3  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Pl3") %}

    {% set prt_sg4  =   paradigm|by_tagset_value("tense", "Prt")
                                |by_tagset_value("number", "Sg4")
                                |without_tagset("negation") %}
    
    {% set neg_sg1 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Sg1") %}

    {% set neg_sg2 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Sg2")
                             |by_tagset_value("mode", "Ind") %}
    
    {% set neg_sg3 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Sg3") %}

    {% set neg_pl1 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Pl1") %}

    {% set neg_pl2 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Pl2") 
                             |by_tagset_value("mode", "Ind") %}

    {% set neg_pl3 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Pl3") %}

    {% set neg_sg4 = paradigm|by_tagset_value("negation", "Neg")
                             |by_tagset_value("number", "Sg4") %}

    {% set conneg_prs = paradigm|by_tagset_value("negation", "ConNeg")
                                |by_tagset_value("tense", "Prs") %}

    {% set conneg_prt = paradigm|by_tagset_value("negation", "ConNeg")
                                |by_tagset_value("tense", "Prt") %}

    {% set imperative_singular = paradigm|by_tagset_value("mode", "Imprt")
                                         |by_tagset_value("number", "Sg2") %}

    {% set imperative_plural = paradigm|by_tagset_value("mode", "Imprt")
                                       |by_tagset_value("number", "Pl2") %}

    {% set imprt_conneg = paradigm|by_tagset_value("negation", "ConNeg")
                                  |by_tagset_value("mode", "Imprt") %}
    
    {% set imprt_connegII = paradigm|by_tagset_value("negation", "ConNegII")
                                    |by_tagset_value("mode", "Imprt") %}

    
    {% set perfect_participle = paradigm|by_tagset("perfect_prc") %}
    
    {# As long as the paradigm files are in order, this will zip
    accurately. If not we need to manually select each form and display
    it. #}

    {# Use izip_longest to fill in the extra blanks spaces when one list
       ends first #}

    {# strip some parts of the tags that we don't need #}

    {% set prs_text      = "Prs"|tagfilter(_from, _to) %}
    {% set prt_text      = "Prt"|tagfilter(_from, _to) %}
    {% set fut_text      = "Fut"|tagfilter(_from, _to) %}
    {% set conneg_text   = "ConNeg"|tagfilter(_from, _to) %}
    {% set verb_text     = "V"|tagfilter(_from, _to) %}
    {% set verb_text_ind = "Ind"|tagfilter(_from, _to) %}
    {% set prfprc_text   = "PrfPrc"|tagfilter(_from, _to) %}
    {% set neg_text      = "Neg"|tagfilter(_from, _to) %}

    {% set is_perfect = nonfinite_forms|by_tagset("perfect_prc")|length > 0 %}
    {# we'll know this isn't just a normal verb with a couple negative
        forms because there are 6 #}
    {% set is_negative = nonfinite_forms|by_tagset("negative")|length == 6 %}


    {% macro clean_tag(tag_input) -%}
        {% set filtered_tag = tag_input|tagfilter(_from, _to) %}

        {% if conneg_text in filtered_tag %}
            {{ filtered_tag|replace(verb_text, "")
                           |replace(verb_text_ind, "") }}
        {% else %}
            {{ filtered_tag|replace(prs_text, "")
                           |replace(prt_text, "")
                           |replace(verb_text, "")
                           |replace(verb_text_ind, "") }}
        {% endif %}
    {%- endmacro %}

{%- endif %}

{%- if pos|upper == 'N' or pos|upper == 'NUM' %}

    {% set sg_forms = paradigm|by_tagset_value("number", "Sg")|group_by_tag %}
    {% set pl_forms = paradigm|by_tagset_value("number", "Pl")|group_by_tag %}

    {# Use izip_longest to fill in the extra blanks spaces when one list
       ends first #}

    {% set zipped_numbers = izip_longest(sg_forms, pl_forms, fillvalue='-')|list %}
    {% set paradigm_exists = zipped_numbers|length > 0 %}

    {% set numberless_forms = paradigm|by_tagset("nouns_null_number") %}

    {% set sg_text = "Sg"|tagfilter(_from, _to) %}
    {% set pl_text = "Pl"|tagfilter(_from, _to) %}

    {% if pos|upper == 'N' %}
        {% set pos_text = pos|upper|tagfilter(_from, _to) %}
    {% elif pos|upper == 'NUM' %}
        {% set pos_text = 'Num'|tagfilter(_from, _to) %}
    {% endif %}

    {% macro clean_tag(tag_input) %}
        {{ tag_input|tagfilter(_from, _to)
                    |replace(pos_text, "")
                    |replace(sg_text, "")
                    |replace(pl_text, "") }}
    {% endmacro %}

    {% set nom_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Nom") %}

    {% set gen_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Gen") %}

    {% set acc_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Acc") %}

    {% set ill_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Ill") %}

    {% set loc_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Loc") %}

    {% set com_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Com") %}

    {% set abe_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Abe") %}

    {% set abe_sg_parenthesis = abe_sg|by_tagset_value("variants", "Var/Parenthesis") %}
    
    {% set abe_sg_vch = abe_sg|by_tagset_value("variants", "Var/VCH") %}
    {% set abe_sg_secondary = abe_sg|by_tagset_value("variants", "Var/Secondary") %}

    {% set abe_sg = abe_sg_vch + abe_sg|without_tagset("variants") + abe_sg_secondary %}

    {% set par_sg   = paradigm|by_tagset_value("number", "Sg")
                              |by_tagset_value("case", "Par") %}

    {% set par      = paradigm|by_tagset_value("case", "Par")
                              |without_tagset("number") %}

    {% set ess      = paradigm|by_tagset_value("case", "Ess") %}

    {% set nom_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Nom") %}

    {% set gen_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Gen") %}

    {% set acc_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Acc") %}

    {% set ill_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Ill") %}

    {% set loc_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Loc") %}

    {% set com_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Com") %}

    {% set abe_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Abe") %}

    {% set par_pl   = paradigm|by_tagset_value("number", "Pl")
                              |by_tagset_value("case", "Par") %}

{% endif -%}

{%- if pos|upper == 'A'  %}

    {% set adj_text = "A"|tagfilter(_from, _to) %}

    {% macro clean_tag(tag_input) %}
        {{ tag_input|tagfilter(_from, _to)
                    |replace(adj_text, "") }}
    {% endmacro %}

{% endif -%}

{%- if pos|upper == 'PRON'  %}

    {% set pron_text  = "Pron"|tagfilter(_from, _to) %}
    {% set indef_text = "Indef"|tagfilter(_from, _to) %}
    {% set sg_text    = "Sg"|tagfilter(_from, _to) %}
    {% set pl_text    = "Pl"|tagfilter(_from, _to) %}


    {# If there are nominal number markings, then we'll split these
       into two columns. Must determine this by checking the tagsets.

       Works for words like eará, soames, etc.
    #}

    {% set two_columns = False %}

    {% if paradigm|by_tagset_value("pron_type", "Pers")|length > 0 %}
        {% set pers_pron = True %}
    {% endif %}

    {% if pers_pron %}
        {% set sg1_forms = paradigm|by_tagset_value("number", "Sg1")|group_by_tag %}
        {% set sg2_forms = paradigm|by_tagset_value("number", "Sg2")|group_by_tag %}
        {% set sg3_forms = paradigm|by_tagset_value("number", "Sg3")|group_by_tag %}
        {% set sg_forms = sg1_forms + sg2_forms + sg3_forms %}

        {% set pl1_forms = paradigm|by_tagset_value("number", "Pl1")|group_by_tag %}
        {% set pl2_forms = paradigm|by_tagset_value("number", "Pl2")|group_by_tag %}
        {% set pl3_forms = paradigm|by_tagset_value("number", "Pl3")|group_by_tag %}
        {% set pl_forms = pl1_forms + pl2_forms + pl3_forms %}
    {% else %}
        {% set sg_forms = paradigm|by_tagset_value("number", "Sg")|group_by_tag %}
        {% set pl_forms = paradigm|by_tagset_value("number", "Pl")|group_by_tag %}
    {% endif %}

    {% set numberless_forms = paradigm|by_tagset("nouns_null_number")|without_tagset("number") %}
    {% if numberless_forms|length > 0 %}
        {% set numberless_forms = numberless_forms|uniq|group_by_tag %}
    {% endif %}

    {% if sg_forms|length > 0 and pl_forms|length > 0 %}
        {% set two_columns = True %}
        {% set zipped_numbers = izip_longest(sg_forms, pl_forms, fillvalue='-')|list %}
    {% endif %}

    {% macro clean_tag(tag_input) %}
        {% if two_columns %}
            {{ tag_input|tagfilter(_from, _to)
                        |replace(pron_text, "")
                        |replace(sg_text, "")
                        |replace(pl_text, "") }}
        {% else %}
            {{ tag_input|tagfilter(_from, _to)
                        |replace(pron_text, "") }}
        {% endif %}
    {% endmacro %}

{% endif -%}

{%- macro full_paradigm_link() %}
    <a class="full-paradigm-link"
       style="opacity: .8;"
       href="http://gtweb.uit.no/cgi-bin/smi/smi.cgi?text={{ lemma }}&pos={{ pos }}&mode=full&action=paradigm&lang=sjd&plang=sjd">
        {%- trans -%}Full paradigm{%- endtrans -%} &nbsp;&rarr;
    </a>
{% endmacro -%}

{%- if has_forms %}

{%- if pos|upper == 'V' %}

    {% if paradigm_exists %}
        <table class="tableparadigm miniparadigm">

            {# This is the two-column tense paradigm #}

            {% if lemma == "лӣннче" %}
            <tr>
                <th></th>
                <th lang="{{ _to }}">{{ fut_text }} <em>(пуэдтӭм па̄лль)</em></th>
            </tr>
            {% elif lemma == "эйй" %}
            <tr>
                <th></th>
                <th lang="{{ _to }}"></th>
            </tr>
            {% else %}
            <tr>
                <th></th>
                <th lang="{{ _to }}">{{ prs_text }} <em>(та̄рьм)</em></th>
                <th lang="{{ _to }}">{{ prt_text }} <em>(еххта)</em></th>
            </tr>
            {% endif %}


            {% if lemma != "лӣннче" and lemma != "эйй" %}
                <tr>
                    <th class="tag" lang="{{ _from }}">мунн</th>
                    <td lang="{{ _from }}">{{ prs_sg1|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_sg1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">то̄нн</th>
                    <td lang="{{ _from }}">{{ prs_sg2|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_sg2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">со̄нн</th>
                    <td lang="{{ _from }}">{{ prs_sg3|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_sg3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">мыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl1|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_pl1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">тыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl2|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_pl2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">сыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl3|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_pl3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">безлич</th>
                    <td lang="{{ _from }}">{{ prs_sg4|uniq|join("<br />", attribute="form")|safe }}</td>
                    <td lang="{{ _from }}">{{ prt_sg4|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>

            {% elif lemma == "лӣннче" %} {# if lemma == лӣннче, only show present forms #}
                <tr>
                    <th class="tag" lang="{{ _from }}">мунн</th>
                    <td lang="{{ _from }}">{{ prs_sg1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">то̄нн</th>
                    <td lang="{{ _from }}">{{ prs_sg2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">со̄нн</th>
                    <td lang="{{ _from }}">{{ prs_sg3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">мыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">тыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">сыйй</th>
                    <td lang="{{ _from }}">{{ prs_pl3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">безлич</th>
                    <td lang="{{ _from }}">{{ prs_sg4|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
            {% else %} {# if lemma == эйй, only show one coloumn #}
                <tr>
                    <th class="tag" lang="{{ _from }}">мунн</th>
                    <td lang="{{ _from }}">{{ neg_sg1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">то̄нн</th>
                    <td lang="{{ _from }}">{{ neg_sg2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">со̄нн</th>
                    <td lang="{{ _from }}">{{ neg_sg3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">мыйй</th>
                    <td lang="{{ _from }}">{{ neg_pl1|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">тыйй</th>
                    <td lang="{{ _from }}">{{ neg_pl2|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">сыйй</th>
                    <td lang="{{ _from }}">{{ neg_pl3|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
                <tr>
                    <th class="tag" lang="{{ _from }}">безлич</th>
                    <td lang="{{ _from }}">{{ neg_sg4|uniq|join("<br />", attribute="form")|safe }}</td>
                </tr>
            {% endif %}
        </table>

        {% if lemma != "лӣннче" %}
            <table class="tableparadigm miniparadigm">
                <tr/>
                {% if conneg_prs %}
                  <tr>
                    <th>отриц. наст.</th>
                    <td>(та̄рьм мунн эмм, то̄нн эгк, ...)</td>
                    <td lang="{{ _from }}">{{ conneg_prs|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if conneg_prt %}
                  <tr>
                    <th>отриц. прош.</th>
                    <td>(еххта мунн эмм, то̄нн эгк, ...)</td>
                    <td lang="{{ _from }}">{{ conneg_prt|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if imperative_singular %}
                  <tr>
                    <th>пов. ед. ч.</th>
                    <td>(одному)</td>
                    <td lang="{{ _from }}">{{ imperative_singular|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if imperative_plural %}
                  <tr>
                    <th>пов. мн. ч.</th>
                    <td>(нескольким)</td>
                    <td lang="{{ _from }}">{{ imperative_plural|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if imprt_conneg %}
                  <tr>
                    <th>пов. ед. ч. отриц.</th>
                    <td>(одному)</td>
                    <td lang="{{ _from }}">{{ imprt_conneg|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if imprt_connegII %}
                  <tr>
                    <th>пов. мн. ч. отриц.</th>
                    <td>(нескольким)</td>
                    <td lang="{{ _from }}">{{ imprt_connegII|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
                {% if perfect_participle %}
                  <tr>
                    <th>зак. прош. вр.</th>
                    <td>(мунн ля̄)</td>
                    <td lang="{{ _from }}">{{ perfect_participle|uniq|join('<br />', attribute='form')|safe }}</td>
                  </tr>
                {% endif %}
            </table>
        {% endif %}
    {% endif %} {# paradigm_exists #}

{% elif pos|upper == 'N' or pos|upper == 'NUM' %}

    {% if paradigm_exists %}

        <table class="tableparadigm miniparadigm">

            <tr>
                <th></th>
                <th lang="{{ _to }}">{{ sg_text }}</th>
                <th lang="{{ _to }}">{{ pl_text }}</th>
            </tr>

            <tr>
                <th lang="{{ _to }}">{% if nom_sg|length > 0 %}{{ clean_tag(nom_sg[0].tag) }}{% elif nom_pl|length > 0 %}{{ clean_tag(nom_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if nom_sg|length > 0 %}{{ nom_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if nom_pl|length > 0 %}{{ nom_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if gen_sg|length > 0 %}{{ clean_tag(gen_sg[0].tag) }}{% elif gen_pl|length > 0 %}{{ clean_tag(gen_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if gen_sg|length > 0 %}{{ gen_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if gen_pl|length > 0 %}{{ gen_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if acc_sg|length > 0 %}{{ clean_tag(acc_sg[0].tag) }}{% elif acc_pl|length > 0 %}{{ clean_tag(acc_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if acc_sg|length > 0 %}{{ acc_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if acc_pl|length > 0 %}{{ acc_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if ill_sg|length > 0 %}{{ clean_tag(ill_sg[0].tag) }}{% elif ill_pl|length > 0 %}{{ clean_tag(ill_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if ill_sg|length > 0 %}{{ ill_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if ill_pl|length > 0 %}{{ ill_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if loc_sg|length > 0 %}{{ clean_tag(loc_sg[0].tag) }}{% elif loc_pl|length > 0 %}{{ clean_tag(loc_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if loc_sg|length > 0 %}{{ loc_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if loc_pl|length > 0 %}{{ loc_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if com_sg|length > 0 %}{{ clean_tag(com_sg[0].tag) }}{% elif com_pl|length > 0 %}{{ clean_tag(com_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if com_sg|length > 0 %}{{ com_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if com_pl|length > 0 %}{{ com_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            <tr>
                <th lang="{{ _to }}">{% if abe_sg|length > 0 %}{{ clean_tag(abe_sg[0].tag) }}{% elif abe_pl|length > 0 %}{{ clean_tag(abe_pl[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{% if abe_sg|length > 0 %}{{ abe_sg|uniq|join("<br />", attribute="form")|safe }}{% if abe_sg_parenthesis %}<br/>({{abe_sg_parenthesis|uniq|join("<br />", attribute="form")|safe}}){% endif %}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if abe_pl|length > 0 %}{{ abe_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            {% if par_sg|length > 0 or par_pl|length > 0 %} {# Nouns with partitive singular and plural #}
            <tr>
                <th lang="{{ _to }}">при сравнении</th>
                <td lang="{{ _from }}">{% if par_sg|length > 0 %}{{ par_sg|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
                <td lang="{{ _from }}">{% if par_pl|length > 0 %}{{ par_pl|uniq|join("<br />", attribute="form")|safe }}{% else %}&mdash;{% endif %}</td>
            </tr>
            {% endif %}
            {% if par|length > 0 %} {# Nouns with numberless partitive #}
            <tr>
                <th lang="{{ _to }}">{% if par_sg|length > 0 or par_pl|length > 0 %}много, мало{% else %}{{ clean_tag(par[0].tag) }}{% endif %}</th>
                <td lang="{{ _from }}">{{ par|uniq|join("<br />", attribute="form")|safe }}</td>
                <td></td>
            </tr>
            {% endif %}
            {% if ess|length > 0 %}
            <tr>
                <th lang="{{ _to }}">{{ clean_tag(ess[0].tag) }}</th>
                <td lang="{{ _from }}">{{ ess|uniq|join("<br />", attribute="form")|safe }}</td>
                <td></td>
            </tr>
            {% endif %}
        </table>

    {% endif %}

{% elif pos|upper == 'A' %}

    <dl class="dl-horizontal miniparadigm">
        {% set adj_forms = paradigm|group_by_tag %}

        {% for var in adj_forms %}
            {% if var[0].tag %}
                <dt>{{ clean_tag(var[0].tag) }}</dt>
            {% endif %}
            <dd lang="{{ _from }}">{{ var|uniq|join('<br />', attribute='form')|safe }}</dd>
        {% endfor %}
    </dl>

{% elif pos|upper == 'PRON' %}
    {% if pers_pron %} {# Two partitive forms #}
        {% set contexts = ["Кто? Что?", "Чей?", "Кого? Чего?", "кому? чему? куда?", "У (от) кого? У (от) чего?", "С кем? С чем?", "Без кого? Без чего?", "при сравн.", "много, мало", "В кого? Во что?"] %}
    {% else %} {# Other displayed pronouns have an unknown partitive, thus not in this list #}
        {% set contexts = ["Кто? Что?", "Чей?", "Кого? Чего?", "кому? чему? куда?", "У (от) кого? У (от) чего?", "С кем? С чем?", "Без кого? Без чего?", "В кого? Во что?"] %}
    {% endif %}

    {% if two_columns %}

        {% if paradigm_exists %}

            <table class="tableparadigm miniparadigm">
                <tr>
                    <th></th>
                    <th lang="{{ _to }}">{{ sg_text }}</th>
                    <th lang="{{ _to }}">{{ pl_text }}</th>
                </tr>

            {%- for sgs, pls in zipped_numbers -%}
                <tr>
                <th class="tag" lang="{{ _to }}">{{ contexts[loop.index - 1] }}</th>

                {% if sgs and sgs != '-' %}
                    <td lang="{{ _from }}">{{ sgs|join('<br />', attribute='form')|safe }}</td>
                {% else %}
                    <td lang="{{ _from }}" class="center">&mdash;</td>
                {% endif %}

                {% if pls and pls != '-' %}
                    <td lang="{{ _from }}">{{ pls|join('<br />', attribute='form')|safe }}</td>
                {% else %}
                    <td lang="{{ _from }}" class="center">&mdash;</td>
                {% endif %}

                </tr>
            {%- endfor -%}  
            {%- if numberless_forms|length > 0 -%}
                {%- for form in numberless_forms -%}
                    <tr>
                        <th class="tag" lang="{{ _to }}">{{ contexts[loop.index + 6] }}</th>
                        <td lang="{{ _to }}">{{ form|join('<br />', attribute='form')|safe }}</td>
                        <td></td>
                    </tr>
                {%- endfor -%}
            {%- endif -%}
            </table>


        {% endif %}
    {% else %}
        <dl class="dl-horizontal miniparadigm">
            <dt>{{ pron_text }} {{ pron_type_text }}</dt>
            <dd>&nbsp;</dd>
            {%- for form in paradigm -%}

                {% if form.tag %}
                    <dt>{{ clean_tag(form.tag) }}</dt>
                {% endif %}

                {% if form.form %}
                <dd lang="{{ _from }}">{{ form.form }}</dd>
                {% else %}
                    <dd lang="{{ _from }}">?</dd>
                {% endif %}
            {%- endfor -%}
        </dl>
    {% endif %}


{% else %}
    <dl class="dl-horizontal miniparadigm">
        {%- for form in paradigm -%}

            {% if form.tag %}
                <dt>{{ form.tag|tagfilter(_from, _to)  }}</dt>
            {% endif %}

            {% if form.form %}
            <dd lang="{{ _from }}">{{ form.form }}</dd>
            {% else %}
                <dd lang="{{ _from }}">?</dd>
            {% endif %}
        {%- endfor -%}
    </dl>

{% endif %}
{# if paradigm_exists %}
    {{ full_paradigm_link() }}
{% endif #}
{% endif -%}


{# vim: set ts=4 sw=4 tw=72 syntax=htmljinja : #}
